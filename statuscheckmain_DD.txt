import json
import boto3
import csv
import urllib.parse

step_client=boto3.client('stepfunctions')
rds_client = boto3.client('rds-data')
s3 = boto3.client('s3')

dynamo_client=boto3.resource("dynamodb")
TargetTable=dynamo_client.Table("TargetListTemp")

DATABASE_NAME = "MRI"
DB_CLUSTER_ARN = "arn:aws:rds:ap-northeast-1:534722855000:cluster:statuscheck"
DB_CREDENTIAL_SECRET_ARN = "arn:aws:secretsmanager:ap-northeast-1:534722855000:secret:rds-db-credentials/cluster-D4WFGST5ILJZMCSTMJGKW5UXBU/admin14/1662956548305-exw6Qq"


def lambda_handler(event, context):
    print("Start")
    TargetListResponse = TargetTable.scan()
    TargetListJson = TargetListResponse['Items']
    print(TargetListJson)
    for i in TargetListJson:
      TableName    = i['Table_Name'] 
      KeyName      = i['Key_Name']
      # Build SQL for T_Status table read
      TStatusSelectSQL='select TableName, Status from T_Status where TableName = "'+TableName+'" and Status=1 and Start_Date = "2022-08-17"'

      # Read Table T_Status
      TStatusSelectResponse = rds_client.execute_statement(
         secretArn=DB_CREDENTIAL_SECRET_ARN,
         database=DATABASE_NAME,
         resourceArn=DB_CLUSTER_ARN,
         sql=TStatusSelectSQL
        )
      TstatusRecFound = len(TStatusSelectResponse['records'])
      print("Table ready for processing----", TstatusRecFound)
      if  TstatusRecFound > 0:
      # Here we will trigger the Controller Step Function for this particular table.
        ControllerParmDict={}
        ControllerParmDict['Table_Name'] = TableName
        ControllerParmDict['Key_Name'] = KeyName
        ControllerParmString=json.dumps(ControllerParmDict)
           
        Step_Invoke = step_client.start_execution(
            stateMachineArn='arn:aws:states:ap-northeast-1:534722855000:stateMachine:Controller_Flow',
            input=ControllerParmString
            )
        #Delete the records from TargetListTemp table is the record is processed.

        TargrtDeleteResponse = TargetTable.delete_item(
            Key={
               'Key_Name':KeyName
                }
            )
       ## End if
    #End For
    RemainingTargetResponse = TargetTable.scan()
    remainingRecordCnt=RemainingTargetResponse['Count']
    print("Remaining Record Count----", remainingRecordCnt)
    
    remainingRecordDict={}
    remainingRecordDict["remainingRecordCount"] = remainingRecordCnt
    remainingRecordDict["SQLFile"] = event['SQLFile']
    remainingRecordString = json.dumps(remainingRecordDict)
    
    remainingRecordJson = json.loads(remainingRecordString)   
    print(remainingRecordJson)
    return remainingRecordJson